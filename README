README

Hier findest du einen Leitfaden, um dich in diesem Repository (Repo) zurechzufinden.
Alle Repos sind nach der gleichen Ordnerstruktur aufgebaut. Zuerst wird zwischen Öffentlichen und 
nicht Öffentlichen Inhalten unterschieden, anschließend erfolgt die Trennung nach der Art des Inhalts
(Prüfung, Skriptum, Labor, Übung, Zusätzliche Infos) und zuletzt nach dem Typ des Inhalts (Rechenbeispiel,
mündliche frage, Theoriefrage,...).

Es werden allgemein folgende Abkürzungen verwendet um dem Team unnötige Tipparbeit in der Konsole zu ersparen.

Ordnerstruktur:
Abkürzung	Deutsch		Bedeutung
Berechtigungsgruppe:		Trennung zwischen Öffentlichen und nicht Öffentlichen Dokumenten
cld		geschlossen	Nur für Personen, welche am Projekt beteiligt sind, zugänglich
opn		offen		Frei zugänglich

  Artengruppe:			In jeder Berechtigungsgruppe erfolgt dann die Trennung nach den Arten
  conf		Konfiguration	Konfigurationsdatein zum erstellen der Dokumente
  exm		Prüfung		Prüfungsrelevante Unterlagen
  hlp		Hilfe		Zusätzliche und hilfreiche Unterlagen, welche tlw. auch zur Prüfung verwendet werden dürfen.
  lab		Labor		Laborrelevante Unterlagen
  main		Hauptordner	Hauptordner mit Builddatein
  out		Ausgabe		Ausgabe der fertig kompilieren Datein
  skp		Skriptum	Skriptum
  tmp		temporär	Ordner mit Temporären Datein, welche während des kompilieren anfallen.
  ue		Übung		Übungsrelevante Unterlagen

    Typengruppe: 		In jeder Artengruppe erfolgt die Trennung nach Typen
    bsp		Beispiel	Rechenbeispiel
    mdl		Mündlich	Mündliche Fragen
    misc	Diverse		Diverse Unterlagen, welche noch nicht sortiert sind.
    mpc		Mehrfachauswahl	Multiple Choice Fragen
    thr		Theorie		Textbezogene Theoriefragen
    txt		Text		Erklärender Text

      Sortierung:
      date	Datum		Sortiert nach Datum (YYYYMMDD) ohne Punkte
      chp	Sub/Kapitel	Sortiert nach Kapitel und Subkapiteln #nr
      
Build Optionen:
ang		Angabe		Ausschließlich die Angabe zu einer Frage
lsg		Lösung		Ausschließlich die Lösung zu einer Frage
hyb		Hybrid		Angabe und Lösung zu einer Frage

Kompilieren mit dem Makefile:
$ make gefolgt von einem der nachfolgenden kommandos
	test		erstellt test.pdf mit allen Datein, welche innerhalb der letzten 60 Minuten bearbeitet wurden.
	{opn,cld}-{exm,lab,skp,ue}-{bsp,mdl,mpc,thr,txt}-{cap,date}-{ang,lsg,hyb}	erstellt die entsprechenden Datein
	clean		entfernt temporäre Datein
	all		alles wird compilliert (derzeit noch Fehlerhaft)
